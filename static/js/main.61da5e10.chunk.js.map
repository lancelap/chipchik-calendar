{"version":3,"sources":["components/TextField.js","components/DateTimePicker.js","components/SelectTimezone.js","utils/calendar.js","components/CalendarForm.js","App.js","index.js"],"names":["components_TextField","_ref","_ref$input","input","name","onChange","value","restInput","Object","objectWithoutProperties","meta","rest","react_default","a","createElement","TextField_default","assign","helperText","touched","error","undefined","InputProps","components_DateTimePicker","formatDate","DateTimePicker_default","format","items","offset","map","zone","key","slice","SelectTimezone","label","defaultValue","FormControl_default","fullWidth","InputLabel_default","shrink","htmlFor","NativeSelect_default","Input_default","Calendar","title","arguments","length","description","timezone","classCallCheck","this","_timezone","_formatDate","_description","_title","start","end","isValid","Error","_startDate","_endDate","concat","CalendarForm","onSubmit","_callee","values","regenerator_default","wrap","_context","prev","next","window","alert","JSON","stringify","stop","state","today","Date","openGoogleCalendar","desc","startDate","endDate","console","log","calendar","setDate","open","googleCalendarLink","descEvent","timezones","dateStart","dateEnd","props","calculator","createDecorator","field","updates","allValues","react_final_form_es","decorators","initialValues","validate","errors","render","_ref2","handleSubmit","submitting","reset","pristine","Grid_default","container","justify","style","height","item","spacing","xs","component","TextField","margin","multiline","rowsMax","DateTimePicker","disablePast","ampm","Button_default","variant","color","type","disabled","Component","App","theme","createMuiTheme","typography","useNextVariants","styles","MuiPickersUtilsProvider_default","utils","DateFnsUtils","components_CalendarForm","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.61da5e10.chunk.js","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nexport default ({\n  input: { name, onChange, value, ...restInput },\n  meta,\n  ...rest\n}) => {\n  return (\n    <TextField\n      {...rest}\n      name={name}\n      helperText={meta.touched ? meta.error : undefined}\n      error={meta.error && meta.touched}\n      InputProps={restInput}\n      onChange={onChange}\n      value={value}\n    />\n  );\n};\n","import React from 'react';\nimport DateTimePicker from 'material-ui-pickers/DateTimePicker';\n\nexport default ({\n  input: { name, onChange, value, ...restInput },\n  meta,\n  formatDate,\n  ...rest\n}) => {\n  return (\n    <DateTimePicker\n      {...rest}\n      name={name}\n      helperText={meta.touched ? meta.error : undefined}\n      error={meta.error && meta.touched}\n      InputProps={restInput}\n      onChange={onChange}\n      value={value}\n      format={formatDate}\n    />\n  );\n};\n","import React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst timezones = [\n  {\n    offset: 'GMT-12:00',\n    name: 'Etc/GMT-12',\n  },\n  {\n    offset: 'GMT-11:00',\n    name: 'Etc/GMT-11',\n  },\n  {\n    offset: 'GMT-11:00',\n    name: 'Pacific/Midway',\n  },\n  {\n    offset: 'GMT-10:00',\n    name: 'America/Adak',\n  },\n  {\n    offset: 'GMT-09:00',\n    name: 'America/Anchorage',\n  },\n  {\n    offset: 'GMT-09:00',\n    name: 'Pacific/Gambier',\n  },\n  {\n    offset: 'GMT-08:00',\n    name: 'America/Dawson_Creek',\n  },\n  {\n    offset: 'GMT-08:00',\n    name: 'America/Ensenada',\n  },\n  {\n    offset: 'GMT-08:00',\n    name: 'America/Los_Angeles',\n  },\n  {\n    offset: 'GMT-07:00',\n    name: 'America/Chihuahua',\n  },\n  {\n    offset: 'GMT-07:00',\n    name: 'America/Denver',\n  },\n  {\n    offset: 'GMT-06:00',\n    name: 'America/Belize',\n  },\n  {\n    offset: 'GMT-06:00',\n    name: 'America/Cancun',\n  },\n  {\n    offset: 'GMT-06:00',\n    name: 'America/Chicago',\n  },\n  {\n    offset: 'GMT-06:00',\n    name: 'Chile/EasterIsland',\n  },\n  {\n    offset: 'GMT-05:00',\n    name: 'America/Bogota',\n  },\n  {\n    offset: 'GMT-05:00',\n    name: 'America/Havana',\n  },\n  {\n    offset: 'GMT-05:00',\n    name: 'America/New_York',\n  },\n  {\n    offset: 'GMT-04:30',\n    name: 'America/Caracas',\n  },\n  {\n    offset: 'GMT-04:00',\n    name: 'America/Campo_Grande',\n  },\n  {\n    offset: 'GMT-04:00',\n    name: 'America/Glace_Bay',\n  },\n  {\n    offset: 'GMT-04:00',\n    name: 'America/Goose_Bay',\n  },\n  {\n    offset: 'GMT-04:00',\n    name: 'America/Santiago',\n  },\n  {\n    offset: 'GMT-04:00',\n    name: 'America/La_Paz',\n  },\n  {\n    offset: 'GMT-03:00',\n    name: 'America/Argentina/Buenos_Aires',\n  },\n  {\n    offset: 'GMT-03:00',\n    name: 'America/Montevideo',\n  },\n  {\n    offset: 'GMT-03:00',\n    name: 'America/Araguaina',\n  },\n  {\n    offset: 'GMT-03:00',\n    name: 'America/Godthab',\n  },\n  {\n    offset: 'GMT-03:00',\n    name: 'America/Miquelon',\n  },\n  {\n    offset: 'GMT-03:00',\n    name: 'America/Sao_Paulo',\n  },\n  {\n    offset: 'GMT-03:30',\n    name: 'America/St_Johns',\n  },\n  {\n    offset: 'GMT-02:00',\n    name: 'America/Noronha',\n  },\n  {\n    offset: 'GMT-01:00',\n    name: 'Atlantic/Cape_Verde',\n  },\n  {\n    offset: 'GMT+00:00',\n    name: 'Europe/Belfast',\n  },\n  {\n    offset: 'GMT+00:00',\n    name: 'Africa/Abidjan',\n  },\n  {\n    offset: 'GMT+00:00',\n    name: 'Europe/Dublin',\n  },\n  {\n    offset: 'GMT+00:00',\n    name: 'Europe/Lisbon',\n  },\n  {\n    offset: 'GMT+00:00',\n    name: 'Europe/London',\n  },\n  {\n    offset: 'UTC+00:00',\n    name: 'UTC',\n  },\n  {\n    offset: 'GMT+01:00',\n    name: 'Africa/Algiers',\n  },\n  {\n    offset: 'GMT+01:00',\n    name: 'Africa/Windhoek',\n  },\n  {\n    offset: 'GMT+01:00',\n    name: 'Atlantic/Azores',\n  },\n  {\n    offset: 'GMT+01:00',\n    name: 'Atlantic/Stanley',\n  },\n  {\n    offset: 'GMT+01:00',\n    name: 'Europe/Amsterdam',\n  },\n  {\n    offset: 'GMT+01:00',\n    name: 'Europe/Belgrade',\n  },\n  {\n    offset: 'GMT+01:00',\n    name: 'Europe/Brussels',\n  },\n  {\n    offset: 'GMT+02:00',\n    name: 'Africa/Cairo',\n  },\n  {\n    offset: 'GMT+02:00',\n    name: 'Africa/Blantyre',\n  },\n  {\n    offset: 'GMT+02:00',\n    name: 'Asia/Beirut',\n  },\n  {\n    offset: 'GMT+02:00',\n    name: 'Asia/Damascus',\n  },\n  {\n    offset: 'GMT+02:00',\n    name: 'Asia/Gaza',\n  },\n  {\n    offset: 'GMT+02:00',\n    name: 'Asia/Jerusalem',\n  },\n  {\n    offset: 'GMT+03:00',\n    name: 'Africa/Addis_Ababa',\n  },\n  {\n    offset: 'GMT+03:00',\n    name: 'Asia/Riyadh89',\n  },\n  {\n    offset: 'GMT+03:00',\n    name: 'Europe/Minsk',\n  },\n  {\n    offset: 'GMT+03:30',\n    name: 'Asia/Tehran',\n  },\n  {\n    offset: 'GMT+04:00',\n    name: 'Asia/Dubai',\n  },\n  {\n    offset: 'GMT+04:00',\n    name: 'Asia/Yerevan',\n  },\n  {\n    offset: 'GMT+04:00',\n    name: 'Europe/Moscow',\n  },\n  {\n    offset: 'GMT+04:30',\n    name: 'Asia/Kabul',\n  },\n  {\n    offset: 'GMT+05:00',\n    name: 'Asia/Tashkent',\n  },\n  {\n    offset: 'GMT+05:30',\n    name: 'Asia/Kolkata',\n  },\n  {\n    offset: 'GMT+05:45',\n    name: 'Asia/Katmandu',\n  },\n  {\n    offset: 'GMT+06:00',\n    name: 'Asia/Dhaka',\n  },\n  {\n    offset: 'GMT+06:00',\n    name: 'Asia/Yekaterinburg',\n  },\n  {\n    offset: 'GMT+06:30',\n    name: 'Asia/Rangoon',\n  },\n  {\n    offset: 'GMT+07:00',\n    name: 'Asia/Bangkok',\n  },\n  {\n    offset: 'GMT+07:00',\n    name: 'Asia/Novosibirsk',\n  },\n  {\n    offset: 'GMT+08:00',\n    name: 'Etc/GMT+8',\n  },\n  {\n    offset: 'GMT+08:00',\n    name: 'Asia/Hong_Kong',\n  },\n  {\n    offset: 'GMT+08:00',\n    name: 'Asia/Krasnoyarsk',\n  },\n  {\n    offset: 'GMT+08:00',\n    name: 'Australia/Perth',\n  },\n  {\n    offset: 'GMT+08:45',\n    name: 'Australia/Eucla',\n  },\n  {\n    offset: 'GMT+09:00',\n    name: 'Asia/Irkutsk',\n  },\n  {\n    offset: 'GMT+09:00',\n    name: 'Asia/Seoul',\n  },\n  {\n    offset: 'GMT+09:00',\n    name: 'Asia/Tokyo',\n  },\n  {\n    offset: 'GMT+09:30',\n    name: 'Australia/Adelaide',\n  },\n  {\n    offset: 'GMT+09:30',\n    name: 'Australia/Darwin',\n  },\n  {\n    offset: 'GMT+09:30',\n    name: 'Pacific/Marquesas',\n  },\n  {\n    offset: 'GMT+10:00',\n    name: 'Etc/GMT+10',\n  },\n  {\n    offset: 'GMT+10:00',\n    name: 'Australia/Brisbane',\n  },\n  {\n    offset: 'GMT+10:00',\n    name: 'Australia/Hobart',\n  },\n  {\n    offset: 'GMT+10:00',\n    name: 'Asia/Yakutsk',\n  },\n  {\n    offset: 'GMT+10:30',\n    name: 'Australia/Lord_Howe',\n  },\n  {\n    offset: 'GMT+11:00',\n    name: 'Asia/Vladivostok',\n  },\n  {\n    offset: 'GMT+11:30',\n    name: 'Pacific/Norfolk',\n  },\n  {\n    offset: 'GMT+12:00',\n    name: 'Etc/GMT+12',\n  },\n  {\n    offset: 'GMT+12:00',\n    name: 'Asia/Anadyr',\n  },\n  {\n    offset: 'GMT+12:00',\n    name: 'Asia/Magadan',\n  },\n  {\n    offset: 'GMT+12:00',\n    name: 'Pacific/Auckland',\n  },\n  {\n    offset: 'GMT+12:45',\n    name: 'Pacific/Chatham',\n  },\n  {\n    offset: 'GMT+13:00',\n    name: 'Pacific/Tongatapu',\n  },\n  {\n    offset: 'GMT+14:00',\n    name: 'Pacific/Kiritimati',\n  },\n];\n\nconst items = timezones.map(zone => (\n  <option key={zone.name} value={zone.offset.slice(3)}>\n    ({zone.offset}) {zone.name}\n  </option>\n));\n\nexport default ({\n  input: { name, onChange, value, ...restInput },\n  meta,\n  label,\n  defaultValue,\n  ...rest\n}) => {\n  return (\n    <FormControl fullWidth>\n      <InputLabel shrink htmlFor={name}>\n        {label}\n      </InputLabel>\n      <NativeSelect\n        {...rest}\n        name={name}\n        onChange={onChange}\n        value={value}\n        input={<Input {...restInput} />}\n      >\n        <option value={defaultValue}>Стандартное время</option>\n        {items}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n","import { format, isValid } from 'date-fns';\n\nclass Calendar {\n  constructor(title = 'New Event', description = '', timezone = '+00:00') {\n    this._timezone = timezone;\n    this._formatDate = \"yyyyMMdd'T'HHmmss\"; // eslint-disable-line\n    this._description = description;\n    this._title = title;\n  }\n\n  setDate(start, end) {\n    if (isValid(start) && isValid(end)) {\n      this._startDate = format(start, this._formatDate);\n      this._endDate = format(end, this._formatDate);\n    } else {\n      throw new Error('Invalide time');\n    }\n  }\n\n  get googleCalendarLink() {\n    const link =\n      'http://www.google.com/calendar/event?action=TEMPLATE' +\n      '&dates=' +\n      this._startDate +\n      '%2F' +\n      this._endDate +\n      '&text=' +\n      this._title +\n      '&location=&details=' +\n      this._description;\n\n    return link;\n  }\n\n  get outlookFile() {\n    return `BEGIN:VCALENDAR\nVERSION:2.0\nPRODID:-//Our Company//NONSGML v1.0//EN\nBEGIN:VEVENT\nUID:me@google.com\nDTSTAMP:${this._startDate}\nORGANIZER;CN=Me:MAILTO::me@gmail.com\nDTSTART:${this._startDate}\nDTEND:${this._endDate}\nSUMMARY:${this._title}\nEND:VEVENT\nEND:VCALENDAR`;\n  }\n}\n\nexport default Calendar;\n","import React, { Component } from 'react';\nimport { Form, Field } from 'react-final-form';\nimport createDecorator from 'final-form-calculate';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from './TextField';\nimport DateTimePicker from './DateTimePicker';\nimport SelectTimezone from './SelectTimezone';\nimport Calendar from './../utils/calendar';\n\nclass CalendarForm extends Component {\n  onSubmit = async values => {\n    window.alert(JSON.stringify(values, 0, 2));\n  };\n\n  state = {\n    today: new Date(),\n  };\n\n  openGoogleCalendar = (title, desc, timezone, startDate, endDate) => () => {\n    console.log(timezone);\n    const calendar = new Calendar(title, desc, timezone);\n    calendar.setDate(startDate, endDate);\n    window.open(calendar.googleCalendarLink);\n  };\n\n  onSubmit = values => {\n    \n    const { title, descEvent, timezones, dateStart, dateEnd } = values;\n    const calendar = new Calendar(title, descEvent, timezones);\n    calendar.setDate(dateStart, dateEnd);\n    window.open(calendar.googleCalendarLink);\n  };\n\n  render() {\n    const { today } = this.state;\n    const { formatDate } = this.props;\n    const validate = values => {\n      const errors = {};\n      if (!values.title) {\n        errors.title = 'Required';\n      }\n      return errors;\n    };\n    const calculator = createDecorator(\n      {\n        field: 'dateStart',\n        updates: {\n          dateEnd: (dateStart, allValues) => {\n            if (dateStart >= allValues.dateEnd) {\n              return dateStart;\n            }\n\n            return allValues.dateEnd;\n          },\n        },\n      },\n      {\n        field: 'dateEnd',\n        updates: {\n          dateStart: (dateEnd, allValues) => {\n            if (dateEnd < allValues.dateStart) {\n              return dateEnd;\n            }\n\n            return allValues.dateStart;\n          },\n        },\n      }\n    );\n\n    return (\n      <Form\n        onSubmit={this.onSubmit}\n        decorators={[calculator]}\n        initialValues={{\n          dateStart: today,\n          dateEnd: today,\n        }}\n        validate={validate}\n        render={({ handleSubmit, reset, submitting, pristine, values }) => (\n          <form onSubmit={handleSubmit}>\n            <Grid container justify=\"center\" style={{ height: '90vh' }}>\n              <Grid container item justify=\"flex-start\" spacing={24} xs={6}>\n                <Grid item xs={12}>\n                  <Field\n                    name=\"title\"\n                    component={TextField}\n                    label=\"Title\"\n                    margin=\"normal\"\n                    fullWidth\n                  />\n                  <Field\n                    name=\"descEvent\"\n                    component={TextField}\n                    label=\"Description\"\n                    multiline\n                    rowsMax=\"10\"\n                    margin=\"normal\"\n                    fullWidth\n                  />\n\n                  <Field\n                    name=\"dateStart\"\n                    component={DateTimePicker}\n                    formatDate={formatDate}\n                    label=\"Start\"\n                    disablePast\n                    ampm={false}\n                    margin=\"normal\"\n                    fullWidth\n                  />\n\n                  <Field\n                    name=\"dateEnd\"\n                    component={DateTimePicker}\n                    formatDate={formatDate}\n                    label=\"End\"\n                    margin=\"normal\"\n                    disablePast\n                    ampm={false}\n                    fullWidth\n                  />\n\n                  <Field\n                    name=\"timezones\"\n                    component={SelectTimezone}\n                    label=\"Timezone\"\n                    fullWidth\n                  />\n                </Grid>\n\n                <Grid item container justify=\"center\" spacing={8}>\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      type=\"submit\"\n                      disabled={submitting}\n                    >\n                      Google Calendar\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </form>\n        )}\n      />\n    );\n  }\n}\n\nexport default CalendarForm;\n","import React, { Component } from 'react';\nimport CalendarForm from './components/CalendarForm';\nimport MuiPickersUtilsProvider from 'material-ui-pickers/MuiPickersUtilsProvider';\nimport DateFnsUtils from 'material-ui-pickers/utils/date-fns-utils';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport 'typeface-roboto';\n\nclass App extends Component {\n  render() {\n    const theme = createMuiTheme({\n      typography: {\n        useNextVariants: true,\n      },\n    });\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <CalendarForm formatDate={'dd.MM.yyyy HH:mm'} />\n        </MuiPickersUtilsProvider>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}